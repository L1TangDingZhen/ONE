# server {
#     listen 80;
#     server_name _;

#     # 通用代理头设置
#     proxy_http_version 1.1;
#     proxy_set_header Upgrade $http_upgrade;
#     proxy_set_header Connection "upgrade";
#     proxy_set_header Host $host;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_buffering off;

#     # Student_Enroll_Grade_System (Vue+Django)
#     location / {
#         try_files $uri $uri/ /index.html;
#         index index.html;
#     }

#     location /api/student/ {
#         proxy_pass http://final:8000/api/;
#     }

#     location /static/ {
#         alias /usr/share/nginx/html/static/;
#         expires 1d;
#     }

#     location /media/ {
#         alias /usr/share/nginx/html/media/;
#         expires 1d;
#     }

#     # Box (React+Django)
#     location /box/ {
#         alias /usr/share/nginx/html/box/;
#         try_files $uri $uri/ /box/index.html;
#         index index.html;
#     }

#     location /api/box/ {
#         proxy_pass http://box_back:8000/api/;
#     }

#     location /box/static/ {
#         alias /usr/share/nginx/html/box/static/;
#         expires 1d;
#     }

#     location /box/media/ {
#         alias /usr/share/nginx/html/box/media/;
#         expires 1d;
#     }

#     # P2P (React+C#)
#     location /p2p/ {
#         alias /usr/share/nginx/html/p2p/;
#         try_files $uri $uri/ /p2p/index.html;
#         index index.html;
#     }

#     location /api/p2p/ {
#         proxy_pass http://P2P:5000/api/;
#     }

#     # P2P SignalR Hub 专用配置 (WebSocket)
#     location /p2p/hubs/ {
#         proxy_pass http://P2P:5000/hubs/;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#         proxy_read_timeout 86400;  # 24h - WebSocket长连接超时设置
#         proxy_send_timeout 86400;  # 24h
#     }

#     location /p2p/static/ {
#         alias /usr/share/nginx/html/p2p/static/;
#         expires 1d;
#     }

#     # 静态资源缓存配置
#     location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
#         expires 1d;
#         add_header Cache-Control "public";
#     }

#     # 增加大文件传输支持
#     client_max_body_size 20M;
# }



server {
    listen 80;
    server_name _;

    # 通用代理头设置
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_pass_request_headers on;
    proxy_pass_request_body on;
    proxy_buffering off;

    # Student_Enroll_Grade_System (Vue+Django)
    location / {
        root /usr/share/nginx/html/student;
        index index.html;
        try_files $uri $uri/ /index.html;
    }

    # 完全路径转发 - 不进行URL重写，这是最简单最直接的方式
    location /api/ {
        # 设置调试头部
        add_header X-Debug-Info "Direct API proxy" always;
        
        # 直接转发到Django后端
        proxy_pass http://final:8000/api/;
        
        # CORS 处理
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
        
        # 处理预检请求
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since' always;
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
        
        # 增加超时时间
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        proxy_read_timeout 300;
    }
}
